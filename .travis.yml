language: node_js
node_js:
  - '11.10.1'
services:
  - 'docker'
cache:
  directories:
    - ~/.npm
    - ~/.cache
addons:
  apt:
    packages:
      # Add cypress dependency. See https://docs.cypress.io/guides/guides/continuous-integration.html#Travis
      - libgconf-2-4

script:
  - npm run lint
  - npm run test:ci
  - npm run test:integration:ci
  - git clean -xdf
  - docker pull etcaterva/echaloasuerte:master
  - |
    if [ "$TRAVIS_BRANCH" == "prod" ] || [ "$TRAVIS_BRANCH" == "prod-next" ] ; then
        app_env=production
    else
        app_env=staging
    fi
    docker build  --build-arg commit_sha=$TRAVIS_COMMIT --build-arg app_env=$app_env -f Dockerfile-prod -t etcaterva/echaloasuerte:$TRAVIS_BRANCH .

branches:
  only:
    - development
    - try-next
    - master
    - prod
    - prod-next

after_success:
  - |
    if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
        if [ "$TRAVIS_BRANCH" == "prod" ] || [ "$TRAVIS_BRANCH" == "master" ] || [ "$TRAVIS_BRANCH" == "try-next" ]; then
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push etcaterva/echaloasuerte:$TRAVIS_BRANCH
        fi
    fi

before_deploy:
  # Decrypt secrets
  - openssl aes-256-cbc -K $encrypted_95e7ffae7ff0_key -iv $encrypted_95e7ffae7ff0_iv -in secrets.tar.enc -out secrets.tar -d
  - tar xvf secrets.tar
  # Enable ssh agent and add ssh key to use for deployment
  - eval "$(ssh-agent -s)" #start the ssh agent
  - chmod 0600 dev-deployment2
  - ssh-add dev-deployment2
  - ssh-add -l
  # Install Ansible
  - pip install --user ansible
  # Deploy to Dev
  - git clone --recurse-submodules https://github.com/etcaterva/deployment.git eas-deployment
  - mv vault-pass eas-deployment/vault-pass
  - export ANSIBLE_HOST_KEY_CHECKING=False

deploy:
  - provider: script
    script: cd eas-deployment &&  ansible-playbook -i hosts_dev config-eas3.yml --vault-password-file=vault-pass --tags "cd-frontend-b" --extra-vars "ansible_user=automation"
    on:
      branch: try-next

  - provider: script
    script: cd eas-deployment &&  ansible-playbook -i hosts_dev config-eas3.yml --vault-password-file=vault-pass --tags "cd-frontend" --extra-vars "ansible_user=automation"
    on:
      branch: master

  - provider: script
    script: cd eas-deployment && git checkout prod && ansible-playbook -i hosts_prod config-eas3.yml --vault-password-file=vault-pass --tags "cd-frontend-b" --extra-vars "ansible_user=automation"
    on:
      branch: prod-next

  - provider: script
    script: cd eas-deployment && git checkout prod && ansible-playbook -i hosts_prod config-eas3.yml --vault-password-file=vault-pass --tags "cd-frontend" --extra-vars "ansible_user=automation"
    on:
      branch: prod
