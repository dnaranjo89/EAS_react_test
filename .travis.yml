language: node_js
node_js:
  - "11.10.1"
services:
  - "docker"
cache:
  directories:
    - ~/.npm
    - ~/.cache
script:
  - npm run lint
  - npm test
  - REACT_APP_ENV=test npm run start:dev -- --silent &
  - $(npm bin)/cypress run -- --record --parallel
  - git clean -xdf
  - docker build --build-arg commit_sha=$TRAVIS_COMMIT -f Dockerfile-prod -t etcaterva/echaloasuerte:$TRAVIS_BRANCH .
branches:
  only:
  - development
  - master
  - prod

after_success:
  - if [ "$TRAVIS_BRANCH" == "prod" ] || [ "$TRAVIS_BRANCH" == "master" ]; then
      docker login -u $DOCKER_USER -p $DOCKER_PASS ;
      docker push etcaterva/echaloasuerte:$TRAVIS_BRANCH ;
    fi

before_deploy:
  # Decrypt secrets
  - openssl aes-256-cbc -K $encrypted_95e7ffae7ff0_key -iv $encrypted_95e7ffae7ff0_iv -in secrets.tar.enc -out secrets.tar -d
  - tar xvf secrets.tar
  # Enable ssh agent and add ssh key to use for deployment
  - eval "$(ssh-agent -s)" #start the ssh agent
  - chmod 0600 dev-deployment2
  - ssh-add dev-deployment2
  - ssh-add -l
  # Install Ansible
  - pip install --user ansible
  # Deploy to Dev
  - git clone --recurse-submodules https://github.com/etcaterva/deployment.git eas-deployment
  - mv vault-pass eas-deployment/vault-pass
  - export ANSIBLE_HOST_KEY_CHECKING=False

deploy:
  - provider: script
    script: cd eas-deployment &&  ansible-playbook -i hosts_dev config-eas3.yml --vault-password-file=vault-pass --extra-vars "ansible_user=automation"
    on:
      branch: master
  - provider: script
    script: cd eas-deployment &&  ansible-playbook -i hosts_prod config-eas3.yml --vault-password-file=vault-pass --extra-vars "ansible_user=automation echaloasuerte_3_git_branch=prod echaloasuerte_3_npm_config=''"
    on:
      branch: prod
