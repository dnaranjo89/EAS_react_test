{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/davidnaranjo/eas/eas-frontend/hocs/withMixpanel.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { MixpanelConsumer } from 'react-mixpanel';\nimport config from '../config/config';\n\nvar withMixpanel = function withMixpanel(WrappedComponent) {\n  var WithMixpanel = function WithMixpanel(props) {\n    return config.mixpanelEnabled ? __jsx(MixpanelConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, function (mixpanel) {\n      return __jsx(WrappedComponent, _extends({\n        mixpanel: mixpanel\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }));\n    }) : __jsx(WrappedComponent, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n  };\n\n  return WithMixpanel;\n};\n\nexport default withMixpanel;","map":{"version":3,"sources":["/Users/davidnaranjo/eas/eas-frontend/hocs/withMixpanel.jsx"],"names":["React","MixpanelConsumer","config","withMixpanel","WrappedComponent","WithMixpanel","props","mixpanelEnabled","mixpanel"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,gBAAgB,EAAI;AACvC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK;AAAA,WACxBJ,MAAM,CAACK,eAAP,GACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,UAAAC,QAAQ;AAAA,aAAI,MAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEA;AAA5B,SAA0CF,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,KADX,CADF,GAKE,MAAC,gBAAD,eAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANsB;AAAA,GAA1B;;AASA,SAAOD,YAAP;AACD,CAXD;;AAaA,eAAeF,YAAf","sourcesContent":["import React from 'react';\nimport { MixpanelConsumer } from 'react-mixpanel';\nimport config from '../config/config';\n\nconst withMixpanel = WrappedComponent => {\n  const WithMixpanel = props =>\n    config.mixpanelEnabled ? (\n      <MixpanelConsumer>\n        {mixpanel => <WrappedComponent mixpanel={mixpanel} {...props} />}\n      </MixpanelConsumer>\n    ) : (\n      <WrappedComponent {...props} />\n    );\n\n  return WithMixpanel;\n};\n\nexport default withMixpanel;\n"]},"metadata":{},"sourceType":"module"}