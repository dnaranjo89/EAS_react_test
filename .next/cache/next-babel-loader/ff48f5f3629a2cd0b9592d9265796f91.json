{"ast":null,"code":"/* eslint-disable no-console */\n\n/* eslint-disable no-underscore-dangle */\nvar isServer = !(true && window.document);\nvar config = {};\n/** ****************\n * Possible environments:\n * - production (deployed app, both in the prod and dev server)\n * - local (running locally)\n * - test (running battery tests)\n **************** */\n\nvar environment;\n\nif (process.env.REACT_APP_ENV) {\n  environment = process.env.REACT_APP_ENV;\n} else if (true) {\n  // NODE_ENV is set to development when running the react development server,\n  // that way we don't need to set the REACT_APP_ENV env variable locally\n  environment = 'local';\n}\n\nif (process.env.REACT_APP_COMMIT) {\n  var deployedCommit = process.env.REACT_APP_COMMIT;\n  console.log(deployedCommit);\n}\n\nif (environment) {\n  try {\n    if (['production', 'test'].indexOf(environment) < 0) {\n      console.log(\"Loading application config for environment: \".concat(environment));\n    }\n\n    var baseConfig = {\n      OGImagesFullDomain: 'https://echaloasuerte.com',\n      environment: environment,\n      isServer: isServer,\n      sentryDsn: 'https://bebd8f08ca1e44b0bd2b2d5f352332f4@sentry.io/1247679'\n    };\n\n    var environmentConfig = require(\"./\".concat(environment)).default; // eslint-disable-line \n\n\n    config = Object.assign({}, baseConfig, environmentConfig); // Disable logs and events when rendering in server\n\n    config.googleAnalyticsEnabled = !isServer && config.googleAnalyticsEnabled;\n    config.mixpanelEnabled = !isServer && config.mixpanelEnabled;\n    config.sentryEnabled = !isServer && config.sentryEnabled;\n  } catch (e) {\n    console.error('No application config could be found.', e);\n  }\n} else {\n  console.error('No environment specified. Please set the REACT_APP_ENV environment variable');\n}\n\nmodule.exports = config;","map":{"version":3,"sources":["/Users/davidnaranjo/eas/eas-frontend/config/config.js"],"names":["isServer","window","document","config","environment","process","env","REACT_APP_ENV","REACT_APP_COMMIT","deployedCommit","console","log","indexOf","baseConfig","OGImagesFullDomain","sentryDsn","environmentConfig","require","default","Object","assign","googleAnalyticsEnabled","mixpanelEnabled","sentryEnabled","e","error","module","exports"],"mappings":"AAAA;;AACA;AAEA,IAAMA,QAAQ,GAAG,EAAE,QAAiCC,MAAM,CAACC,QAA1C,CAAjB;AAEA,IAAIC,MAAM,GAAG,EAAb;AACA;;;;;;;AAMA,IAAIC,WAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,aAAhB,EAA+B;AAC7BH,EAAAA,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAA1B;AACD,CAFD,MAEO,UAA4C;AACjD;AACA;AACAH,EAAAA,WAAW,GAAG,OAAd;AACD;;AAED,IAAIC,OAAO,CAACC,GAAR,CAAYE,gBAAhB,EAAkC;AAChC,MAAMC,cAAc,GAAGJ,OAAO,CAACC,GAAR,CAAYE,gBAAnC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACD;;AAED,IAAIL,WAAJ,EAAiB;AACf,MAAI;AACF,QAAI,CAAC,YAAD,EAAe,MAAf,EAAuBQ,OAAvB,CAA+BR,WAA/B,IAA8C,CAAlD,EAAqD;AACnDM,MAAAA,OAAO,CAACC,GAAR,uDAA2DP,WAA3D;AACD;;AAED,QAAMS,UAAU,GAAG;AACjBC,MAAAA,kBAAkB,EAAE,2BADH;AAEjBV,MAAAA,WAAW,EAAXA,WAFiB;AAGjBJ,MAAAA,QAAQ,EAARA,QAHiB;AAIjBe,MAAAA,SAAS,EAAE;AAJM,KAAnB;;AAOA,QAAMC,iBAAiB,GAAGC,OAAO,aAAMb,WAAN,EAAP,CAA4Bc,OAAtD,CAZE,CAY6D;;;AAC/Df,IAAAA,MAAM,GAAGgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,UAAlB,EAA8BG,iBAA9B,CAAT,CAbE,CAeF;;AACAb,IAAAA,MAAM,CAACkB,sBAAP,GAAgC,CAACrB,QAAD,IAAaG,MAAM,CAACkB,sBAApD;AACAlB,IAAAA,MAAM,CAACmB,eAAP,GAAyB,CAACtB,QAAD,IAAaG,MAAM,CAACmB,eAA7C;AACAnB,IAAAA,MAAM,CAACoB,aAAP,GAAuB,CAACvB,QAAD,IAAaG,MAAM,CAACoB,aAA3C;AACD,GAnBD,CAmBE,OAAOC,CAAP,EAAU;AACVd,IAAAA,OAAO,CAACe,KAAR,CAAc,uCAAd,EAAuDD,CAAvD;AACD;AACF,CAvBD,MAuBO;AACLd,EAAAA,OAAO,CAACe,KAAR,CAAc,6EAAd;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBxB,MAAjB","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-underscore-dangle */\n\nconst isServer = !(typeof window !== 'undefined' && window.document);\n\nlet config = {};\n/** ****************\n * Possible environments:\n * - production (deployed app, both in the prod and dev server)\n * - local (running locally)\n * - test (running battery tests)\n **************** */\nlet environment;\n\nif (process.env.REACT_APP_ENV) {\n  environment = process.env.REACT_APP_ENV;\n} else if (process.env.NODE_ENV === 'development') {\n  // NODE_ENV is set to development when running the react development server,\n  // that way we don't need to set the REACT_APP_ENV env variable locally\n  environment = 'local';\n}\n\nif (process.env.REACT_APP_COMMIT) {\n  const deployedCommit = process.env.REACT_APP_COMMIT;\n  console.log(deployedCommit);\n}\n\nif (environment) {\n  try {\n    if (['production', 'test'].indexOf(environment) < 0) {\n      console.log(`Loading application config for environment: ${environment}`);\n    }\n\n    const baseConfig = {\n      OGImagesFullDomain: 'https://echaloasuerte.com',\n      environment,\n      isServer,\n      sentryDsn: 'https://bebd8f08ca1e44b0bd2b2d5f352332f4@sentry.io/1247679',\n    };\n\n    const environmentConfig = require(`./${environment}`).default; // eslint-disable-line \n    config = Object.assign({}, baseConfig, environmentConfig);\n\n    // Disable logs and events when rendering in server\n    config.googleAnalyticsEnabled = !isServer && config.googleAnalyticsEnabled;\n    config.mixpanelEnabled = !isServer && config.mixpanelEnabled;\n    config.sentryEnabled = !isServer && config.sentryEnabled;\n  } catch (e) {\n    console.error('No application config could be found.', e);\n  }\n} else {\n  console.error('No environment specified. Please set the REACT_APP_ENV environment variable');\n}\n\nmodule.exports = config;\n"]},"metadata":{},"sourceType":"script"}