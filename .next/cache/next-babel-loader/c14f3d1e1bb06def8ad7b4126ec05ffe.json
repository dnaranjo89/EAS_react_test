{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { FETCH_DRAW } from '../actions/types';\nconst initialState = {\n  draw: {\n    title: '',\n    description: '',\n    participants: [],\n    prizes: [],\n    numberOfGroups: null,\n    result: null,\n    isOwner: false,\n    isLoading: true\n  }\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_DRAW:\n      return _objectSpread({}, state, {\n        draw: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/davidnaranjo/eas/eas-frontend/src/reducers/drawReducers.js"],"names":["FETCH_DRAW","initialState","draw","title","description","participants","prizes","numberOfGroups","result","isOwner","isLoading","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,WAAW,EAAE,EAFT;AAGJC,IAAAA,YAAY,EAAE,EAHV;AAIJC,IAAAA,MAAM,EAAE,EAJJ;AAKJC,IAAAA,cAAc,EAAE,IALZ;AAMJC,IAAAA,MAAM,EAAE,IANJ;AAOJC,IAAAA,OAAO,EAAE,KAPL;AAQJC,IAAAA,SAAS,EAAE;AARP;AADa,CAArB;AAaA,eAAe,UAASC,KAAK,GAAGV,YAAjB,EAA+BW,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,UAAL;AACE,+BAAYW,KAAZ;AAAmBT,QAAAA,IAAI,EAAEU,MAAM,CAACE;AAAhC;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD","sourcesContent":["import { FETCH_DRAW } from '../actions/types';\n\nconst initialState = {\n  draw: {\n    title: '',\n    description: '',\n    participants: [],\n    prizes: [],\n    numberOfGroups: null,\n    result: null,\n    isOwner: false,\n    isLoading: true,\n  },\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_DRAW:\n      return { ...state, draw: action.payload };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}