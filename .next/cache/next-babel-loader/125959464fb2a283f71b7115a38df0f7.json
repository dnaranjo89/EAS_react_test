{"ast":null,"code":"var _jsxFileName = \"/Users/davidnaranjo/eas/eas-frontend/pages/coin/index.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FlipCoinPage from './FlipCoinPage.jsx';\nimport withTracking from '../../withTracking/withTracking.jsx';\nimport { ANALYTICS_TYPE_COIN } from '../../../constants/analyticsTypes';\n\nclass FlipCoinPageContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleFlipCoin\", () => {\n      const {\n        track\n      } = this.props;\n      const coinSide = Math.floor(Math.random() * 2) ? 'heads' : 'tails';\n      track({\n        mp: {\n          name: `Toss - ${ANALYTICS_TYPE_COIN}`,\n          properties: {\n            drawType: ANALYTICS_TYPE_COIN\n          }\n        },\n        ga: {\n          action: 'Toss',\n          category: ANALYTICS_TYPE_COIN\n        }\n      });\n      this.setState({\n        coinSide,\n        showTossHelp: false\n      });\n    });\n\n    this.state = {\n      coinSide: 'heads',\n      showTossHelp: true\n    };\n  }\n\n  render() {\n    const {\n      coinSide,\n      showTossHelp\n    } = this.state;\n    return __jsx(FlipCoinPage, {\n      coinSide: coinSide,\n      onFlip: this.handleFlipCoin,\n      showTossHelp: showTossHelp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }\n\n}\n\nFlipCoinPageContainer.propTypes = {\n  track: PropTypes.func.isRequired\n};\nexport default withTracking(FlipCoinPageContainer);","map":{"version":3,"sources":["/Users/davidnaranjo/eas/eas-frontend/pages/coin/index.jsx"],"names":["React","Component","PropTypes","FlipCoinPage","withTracking","ANALYTICS_TYPE_COIN","FlipCoinPageContainer","constructor","props","track","coinSide","Math","floor","random","mp","name","properties","drawType","ga","action","category","setState","showTossHelp","state","render","handleFlipCoin","propTypes","func","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,mBAAT,QAAoC,mCAApC;;AAEA,MAAMC,qBAAN,SAAoCL,SAApC,CAA8C;AAC5CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,4CAQF,MAAM;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKD,KAAvB;AACA,YAAME,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,OAAhC,GAA0C,OAA3D;AACAJ,MAAAA,KAAK,CAAC;AACJK,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAG,UAASV,mBAAoB,EAAtC;AAAyCW,UAAAA,UAAU,EAAE;AAAEC,YAAAA,QAAQ,EAAEZ;AAAZ;AAArD,SADA;AAEJa,QAAAA,EAAE,EAAE;AAAEC,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,QAAQ,EAAEf;AAA5B;AAFA,OAAD,CAAL;AAIA,WAAKgB,QAAL,CAAc;AACZX,QAAAA,QADY;AAEZY,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID,KAnBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXb,MAAAA,QAAQ,EAAE,OADC;AAEXY,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAeDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,QAAF;AAAYY,MAAAA;AAAZ,QAA6B,KAAKC,KAAxC;AACA,WACE,MAAC,YAAD;AAAc,MAAA,QAAQ,EAAEb,QAAxB;AAAkC,MAAA,MAAM,EAAE,KAAKe,cAA/C;AAA+D,MAAA,YAAY,EAAEH,YAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA3B2C;;AA8B9ChB,qBAAqB,CAACoB,SAAtB,GAAkC;AAChCjB,EAAAA,KAAK,EAAEP,SAAS,CAACyB,IAAV,CAAeC;AADU,CAAlC;AAIA,eAAexB,YAAY,CAACE,qBAAD,CAA3B","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FlipCoinPage from './FlipCoinPage.jsx';\nimport withTracking from '../../withTracking/withTracking.jsx';\nimport { ANALYTICS_TYPE_COIN } from '../../../constants/analyticsTypes';\n\nclass FlipCoinPageContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coinSide: 'heads',\n      showTossHelp: true,\n    };\n  }\n\n  handleFlipCoin = () => {\n    const { track } = this.props;\n    const coinSide = Math.floor(Math.random() * 2) ? 'heads' : 'tails';\n    track({\n      mp: { name: `Toss - ${ANALYTICS_TYPE_COIN}`, properties: { drawType: ANALYTICS_TYPE_COIN } },\n      ga: { action: 'Toss', category: ANALYTICS_TYPE_COIN },\n    });\n    this.setState({\n      coinSide,\n      showTossHelp: false,\n    });\n  };\n\n  render() {\n    const { coinSide, showTossHelp } = this.state;\n    return (\n      <FlipCoinPage coinSide={coinSide} onFlip={this.handleFlipCoin} showTossHelp={showTossHelp} />\n    );\n  }\n}\n\nFlipCoinPageContainer.propTypes = {\n  track: PropTypes.func.isRequired,\n};\n\nexport default withTracking(FlipCoinPageContainer);\n"]},"metadata":{},"sourceType":"module"}