{"ast":null,"code":"var _jsxFileName = \"/Users/davidnaranjo/eas/eas-frontend/components/withMixpanel/withMixpanel.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { MixpanelConsumer } from 'react-mixpanel';\nimport config from '../../config/config';\n\nconst withMixpanel = WrappedComponent => {\n  const WithMixpanel = props => config.mixpanelEnabled ? __jsx(MixpanelConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, mixpanel => __jsx(WrappedComponent, _extends({\n    mixpanel: mixpanel\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }))) : __jsx(WrappedComponent, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n\n  return WithMixpanel;\n};\n\nexport default withMixpanel;","map":{"version":3,"sources":["/Users/davidnaranjo/eas/eas-frontend/components/withMixpanel/withMixpanel.jsx"],"names":["React","MixpanelConsumer","config","withMixpanel","WrappedComponent","WithMixpanel","props","mixpanelEnabled","mixpanel"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,YAAY,GAAGC,gBAAgB,IAAI;AACvC,QAAMC,YAAY,GAAGC,KAAK,IACxBJ,MAAM,CAACK,eAAP,GACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QAAQ,IAAI,MAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEA;AAA5B,KAA0CF,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADf,CADF,GAKE,MAAC,gBAAD,eAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANJ;;AASA,SAAOD,YAAP;AACD,CAXD;;AAaA,eAAeF,YAAf","sourcesContent":["import React from 'react';\nimport { MixpanelConsumer } from 'react-mixpanel';\nimport config from '../../config/config';\n\nconst withMixpanel = WrappedComponent => {\n  const WithMixpanel = props =>\n    config.mixpanelEnabled ? (\n      <MixpanelConsumer>\n        {mixpanel => <WrappedComponent mixpanel={mixpanel} {...props} />}\n      </MixpanelConsumer>\n    ) : (\n      <WrappedComponent {...props} />\n    );\n\n  return WithMixpanel;\n};\n\nexport default withMixpanel;\n"]},"metadata":{},"sourceType":"module"}