{"ast":null,"code":"var _jsxFileName = \"/Users/davidnaranjo/eas/eas-frontend/components/Page/Page.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport classNames from 'classnames/bind';\nimport Helmet from 'react-helmet';\nimport ReactGA from 'react-ga';\nimport { connect } from 'react-redux'; // import { withRouter } from 'react-router';\n\nimport i18n from 'i18next';\nimport { withRouter } from 'next/router';\nimport withMixpanel from '../withMixpanel/withMixpanel.jsx';\nimport Advert from '../Advert/Advert.jsx';\nimport PageLayout from './PageLayout.jsx';\nimport { hotjar } from '../../services/hotjar';\nimport { getExperimentsAllocation } from '../../services/abtest';\nimport config from '../../config/config';\nimport defaultOgImage from './logo_og.png';\nimport STYLES from './Page.module.scss';\nconst c = classNames.bind(STYLES);\n\nclass Page extends Component {\n  componentDidMount() {\n    const {\n      mixpanel,\n      pageType,\n      location,\n      enableHotjar\n    } = this.props;\n\n    if (config.googleAnalyticsEnabled) {\n      const page = location.pathname;\n      ReactGA.pageview(page);\n    }\n\n    if (config.mixpanelEnabled) {\n      mixpanel.track(`Page Loaded - ${pageType}`, _objectSpread({}, getExperimentsAllocation(), {\n        pageType\n      }));\n    }\n\n    if (config.hotjarEnabled && enableHotjar) {\n      hotjar.initialize(1051921, 6);\n    }\n  }\n\n  getAbsoluteUrl() {\n    const {\n      location,\n      hostname\n    } = this.props;\n    return `https://${hostname}${location.pathname}`;\n  }\n\n  getMetaTags() {\n    const {\n      htmlTitle,\n      htmlDescription,\n      htmlKeywords,\n      noIndex,\n      ogImage\n    } = this.props;\n    const shouldIndexPage = config.indexPages && !noIndex;\n    const pageTitle = htmlTitle.substring(0, 60);\n    const pageDescription = htmlDescription.substring(0, 155);\n    const absoluteUrl = this.getAbsoluteUrl();\n    const metaTags = [{\n      name: 'description',\n      content: pageDescription\n    }, {\n      name: 'keywords',\n      content: htmlKeywords\n    }, {\n      property: 'og:title',\n      content: pageTitle\n    }, {\n      property: 'og:image',\n      content: config.OGImagesFullDomain + ogImage\n    }, {\n      property: 'og:description',\n      content: pageDescription\n    }, {\n      property: 'og:url',\n      content: absoluteUrl\n    }, {\n      property: 'og:type',\n      content: 'website'\n    }, {\n      property: 'fb:app_id',\n      content: config.facebookAppId\n    }];\n\n    if (!shouldIndexPage) {\n      metaTags.push({\n        name: 'robots',\n        content: 'noindex'\n      });\n    }\n\n    return metaTags;\n  }\n\n  render() {\n    const {\n      htmlTitle,\n      contentClassName,\n      children,\n      showAdvert,\n      sidePanel\n    } = this.props;\n    const absoluteUrl = this.getAbsoluteUrl();\n    const canonicalLinks = [{\n      rel: 'canonical',\n      href: absoluteUrl\n    }];\n    return __jsx(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(Helmet, {\n      title: htmlTitle,\n      htmlAttributes: {\n        lang: i18n.language,\n        itemtype: 'http://schema.org/WebPage'\n      },\n      link: canonicalLinks,\n      meta: this.getMetaTags(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: c('Page'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(PageLayout, {\n      sidePanel: sidePanel,\n      contentClassName: contentClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, children), showAdvert && __jsx(Advert, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nPage.propTypes = {\n  htmlTitle: PropTypes.string.isRequired,\n  htmlDescription: PropTypes.string,\n  htmlKeywords: PropTypes.string,\n  pageType: PropTypes.string.isRequired,\n  enableHotjar: PropTypes.bool,\n  contentClassName: PropTypes.string,\n  mixpanel: PropTypes.shape({\n    track: PropTypes.func.isRequired\n  }),\n  children: PropTypes.node.isRequired,\n  noIndex: PropTypes.bool,\n  location: ReactRouterPropTypes.location.isRequired,\n  ogImage: PropTypes.node,\n  hostname: PropTypes.string.isRequired,\n  showAdvert: PropTypes.bool,\n  sidePanel: PropTypes.node\n};\nPage.defaultProps = {\n  contentClassName: null,\n  noIndex: false,\n  ogImage: defaultOgImage,\n  htmlKeywords: '',\n  htmlDescription: '',\n  enableHotjar: false,\n  showAdvert: true,\n  mixpanel: null,\n  sidePanel: null\n};\n\nconst mapsStateToProps = state => ({\n  hostname: state.userRequest.hostname\n});\n\nexport default withMixpanel(withRouter(connect(mapsStateToProps)(Page)));","map":{"version":3,"sources":["/Users/davidnaranjo/eas/eas-frontend/components/Page/Page.jsx"],"names":["React","Component","Fragment","PropTypes","ReactRouterPropTypes","classNames","Helmet","ReactGA","connect","i18n","withRouter","withMixpanel","Advert","PageLayout","hotjar","getExperimentsAllocation","config","defaultOgImage","STYLES","c","bind","Page","componentDidMount","mixpanel","pageType","location","enableHotjar","props","googleAnalyticsEnabled","page","pathname","pageview","mixpanelEnabled","track","hotjarEnabled","initialize","getAbsoluteUrl","hostname","getMetaTags","htmlTitle","htmlDescription","htmlKeywords","noIndex","ogImage","shouldIndexPage","indexPages","pageTitle","substring","pageDescription","absoluteUrl","metaTags","name","content","property","OGImagesFullDomain","facebookAppId","push","render","contentClassName","children","showAdvert","sidePanel","canonicalLinks","rel","href","lang","language","itemtype","propTypes","string","isRequired","bool","shape","func","node","defaultProps","mapsStateToProps","state","userRequest"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactRouterPropTypes from 'react-router-prop-types';\nimport classNames from 'classnames/bind';\nimport Helmet from 'react-helmet';\nimport ReactGA from 'react-ga';\nimport { connect } from 'react-redux';\n// import { withRouter } from 'react-router';\nimport i18n from 'i18next';\nimport { withRouter } from 'next/router';\nimport withMixpanel from '../withMixpanel/withMixpanel.jsx';\nimport Advert from '../Advert/Advert.jsx';\nimport PageLayout from './PageLayout.jsx';\nimport { hotjar } from '../../services/hotjar';\nimport { getExperimentsAllocation } from '../../services/abtest';\nimport config from '../../config/config';\nimport defaultOgImage from './logo_og.png';\nimport STYLES from './Page.module.scss';\n\nconst c = classNames.bind(STYLES);\n\nclass Page extends Component {\n  componentDidMount() {\n    const { mixpanel, pageType, location, enableHotjar } = this.props;\n    if (config.googleAnalyticsEnabled) {\n      const page = location.pathname;\n      ReactGA.pageview(page);\n    }\n    if (config.mixpanelEnabled) {\n      mixpanel.track(`Page Loaded - ${pageType}`, {\n        ...getExperimentsAllocation(),\n        pageType,\n      });\n    }\n    if (config.hotjarEnabled && enableHotjar) {\n      hotjar.initialize(1051921, 6);\n    }\n  }\n\n  getAbsoluteUrl() {\n    const { location, hostname } = this.props;\n    return `https://${hostname}${location.pathname}`;\n  }\n\n  getMetaTags() {\n    const { htmlTitle, htmlDescription, htmlKeywords, noIndex, ogImage } = this.props;\n    const shouldIndexPage = config.indexPages && !noIndex;\n    const pageTitle = htmlTitle.substring(0, 60);\n    const pageDescription = htmlDescription.substring(0, 155);\n    const absoluteUrl = this.getAbsoluteUrl();\n    const metaTags = [\n      { name: 'description', content: pageDescription },\n      { name: 'keywords', content: htmlKeywords },\n      { property: 'og:title', content: pageTitle },\n      { property: 'og:image', content: config.OGImagesFullDomain + ogImage },\n      { property: 'og:description', content: pageDescription },\n      { property: 'og:url', content: absoluteUrl },\n      { property: 'og:type', content: 'website' },\n      { property: 'fb:app_id', content: config.facebookAppId },\n    ];\n\n    if (!shouldIndexPage) {\n      metaTags.push({ name: 'robots', content: 'noindex' });\n    }\n\n    return metaTags;\n  }\n\n  render() {\n    const { htmlTitle, contentClassName, children, showAdvert, sidePanel } = this.props;\n    const absoluteUrl = this.getAbsoluteUrl();\n    const canonicalLinks = [\n      {\n        rel: 'canonical',\n        href: absoluteUrl,\n      },\n    ];\n    return (\n      <Fragment>\n        <Helmet\n          title={htmlTitle}\n          htmlAttributes={{\n            lang: i18n.language,\n            itemtype: 'http://schema.org/WebPage',\n          }}\n          link={canonicalLinks}\n          meta={this.getMetaTags()}\n        />\n        <div className={c('Page')}>\n          <PageLayout sidePanel={sidePanel} contentClassName={contentClassName}>\n            {children}\n          </PageLayout>\n          {showAdvert && <Advert />}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nPage.propTypes = {\n  htmlTitle: PropTypes.string.isRequired,\n  htmlDescription: PropTypes.string,\n  htmlKeywords: PropTypes.string,\n  pageType: PropTypes.string.isRequired,\n  enableHotjar: PropTypes.bool,\n  contentClassName: PropTypes.string,\n  mixpanel: PropTypes.shape({ track: PropTypes.func.isRequired }),\n  children: PropTypes.node.isRequired,\n  noIndex: PropTypes.bool,\n  location: ReactRouterPropTypes.location.isRequired,\n  ogImage: PropTypes.node,\n  hostname: PropTypes.string.isRequired,\n  showAdvert: PropTypes.bool,\n  sidePanel: PropTypes.node,\n};\n\nPage.defaultProps = {\n  contentClassName: null,\n  noIndex: false,\n  ogImage: defaultOgImage,\n  htmlKeywords: '',\n  htmlDescription: '',\n  enableHotjar: false,\n  showAdvert: true,\n  mixpanel: null,\n  sidePanel: null,\n};\n\nconst mapsStateToProps = state => ({\n  hostname: state.userRequest.hostname,\n});\n\nexport default withMixpanel(withRouter(connect(mapsStateToProps)(Page)));\n"]},"metadata":{},"sourceType":"module"}