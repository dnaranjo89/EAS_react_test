{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidnaranjo/eas/eas-frontend/hocs/withTracking.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactGA from 'react-ga';\nimport withMixpanel from './withMixpanel.jsx';\nimport config from '../config/config';\nimport { getExperimentsAllocation } from '../services/abtest';\n\nvar withTracking = function withTracking(WrappedComponent) {\n  var WithTracking = function WithTracking(props) {\n    var mixpanel = props.mixpanel;\n\n    var track = function track(_ref) {\n      var mp = _ref.mp,\n          ga = _ref.ga;\n\n      if (config.googleAnalyticsEnabled && ga) {\n        var category = ga.category,\n            action = ga.action,\n            label = ga.label;\n        ReactGA.event({\n          category: category,\n          action: action,\n          label: label\n        });\n      }\n\n      if (config.mixpanelEnabled && mp) {\n        var name = mp.name,\n            properties = mp.properties;\n\n        var data = _objectSpread({}, getExperimentsAllocation(), {}, properties);\n\n        mixpanel.track(name, data);\n      }\n    };\n\n    return __jsx(WrappedComponent, _extends({\n      track: track\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  };\n\n  WithTracking.propTypes = {\n    mixpanel: PropTypes.shape()\n  };\n  WithTracking.defaultProps = {\n    mixpanel: null\n  };\n  return withMixpanel(WithTracking);\n};\n\nexport default withTracking;","map":{"version":3,"sources":["/Users/davidnaranjo/eas/eas-frontend/hocs/withTracking.jsx"],"names":["React","PropTypes","ReactGA","withMixpanel","config","getExperimentsAllocation","withTracking","WrappedComponent","WithTracking","props","mixpanel","track","mp","ga","googleAnalyticsEnabled","category","action","label","event","mixpanelEnabled","name","properties","data","propTypes","shape","defaultProps"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,wBAAT,QAAyC,oBAAzC;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,gBAAgB,EAAI;AACvC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,QACpBC,QADoB,GACPD,KADO,CACpBC,QADoB;;AAE5B,QAAMC,KAAK,GAAG,SAARA,KAAQ,OAAgB;AAAA,UAAbC,EAAa,QAAbA,EAAa;AAAA,UAATC,EAAS,QAATA,EAAS;;AAC5B,UAAIT,MAAM,CAACU,sBAAP,IAAiCD,EAArC,EAAyC;AAAA,YAC/BE,QAD+B,GACHF,EADG,CAC/BE,QAD+B;AAAA,YACrBC,MADqB,GACHH,EADG,CACrBG,MADqB;AAAA,YACbC,KADa,GACHJ,EADG,CACbI,KADa;AAEvCf,QAAAA,OAAO,CAACgB,KAAR,CAAc;AAAEH,UAAAA,QAAQ,EAARA,QAAF;AAAYC,UAAAA,MAAM,EAANA,MAAZ;AAAoBC,UAAAA,KAAK,EAALA;AAApB,SAAd;AACD;;AACD,UAAIb,MAAM,CAACe,eAAP,IAA0BP,EAA9B,EAAkC;AAAA,YACxBQ,IADwB,GACHR,EADG,CACxBQ,IADwB;AAAA,YAClBC,UADkB,GACHT,EADG,CAClBS,UADkB;;AAEhC,YAAMC,IAAI,qBACLjB,wBAAwB,EADnB,MAELgB,UAFK,CAAV;;AAIAX,QAAAA,QAAQ,CAACC,KAAT,CAAeS,IAAf,EAAqBE,IAArB;AACD;AACF,KAbD;;AAcA,WAAO,MAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEX;AAAzB,OAAoCF,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAjBD;;AAmBAD,EAAAA,YAAY,CAACe,SAAb,GAAyB;AACvBb,IAAAA,QAAQ,EAAET,SAAS,CAACuB,KAAV;AADa,GAAzB;AAGAhB,EAAAA,YAAY,CAACiB,YAAb,GAA4B;AAC1Bf,IAAAA,QAAQ,EAAE;AADgB,GAA5B;AAIA,SAAOP,YAAY,CAACK,YAAD,CAAnB;AACD,CA5BD;;AA8BA,eAAeF,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactGA from 'react-ga';\nimport withMixpanel from './withMixpanel.jsx';\nimport config from '../config/config';\nimport { getExperimentsAllocation } from '../services/abtest';\n\nconst withTracking = WrappedComponent => {\n  const WithTracking = props => {\n    const { mixpanel } = props;\n    const track = ({ mp, ga }) => {\n      if (config.googleAnalyticsEnabled && ga) {\n        const { category, action, label } = ga;\n        ReactGA.event({ category, action, label });\n      }\n      if (config.mixpanelEnabled && mp) {\n        const { name, properties } = mp;\n        const data = {\n          ...getExperimentsAllocation(),\n          ...properties,\n        };\n        mixpanel.track(name, data);\n      }\n    };\n    return <WrappedComponent track={track} {...props} />;\n  };\n\n  WithTracking.propTypes = {\n    mixpanel: PropTypes.shape(),\n  };\n  WithTracking.defaultProps = {\n    mixpanel: null,\n  };\n\n  return withMixpanel(WithTracking);\n};\n\nexport default withTracking;\n"]},"metadata":{},"sourceType":"module"}