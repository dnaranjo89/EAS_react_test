{"ast":null,"code":"var _jsxFileName = \"/Users/davidnaranjo/eas/eas-frontend/lib/with-redux-store.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport initializeStore from '../store';\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (true) {\n    return initializeStore(initialState);\n  } // Create store if unavailable on the client and set it on the window object\n\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default (App => class AppWithRedux extends React.Component {\n  static async getInitialProps(appContext) {\n    // Get or Create the store with `undefined` as initialState\n    // This allows you to set a custom default initialState\n    const store = getOrCreateStore(); // Provide the store to getInitialProps of pages\n\n    appContext.ctx.store = store;\n    return _objectSpread({}, App.getInitialProps ? await App.getInitialProps(appContext) : {}, {\n      initialReduxState: store.getState()\n    });\n  }\n\n  render() {\n    const {\n      initialReduxState\n    } = this.props;\n    return __jsx(App, _extends({}, this.props, {\n      store: getOrCreateStore(initialReduxState),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n});","map":{"version":3,"sources":["/Users/davidnaranjo/eas/eas-frontend/lib/with-redux-store.js"],"names":["React","initializeStore","__NEXT_REDUX_STORE__","getOrCreateStore","initialState","window","App","AppWithRedux","Component","getInitialProps","appContext","store","ctx","initialReduxState","getState","render","props"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,UAA5B;AAEA,MAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACtC;AACA,YAAmC;AACjC,WAAOH,eAAe,CAACG,YAAD,CAAtB;AACD,GAJqC,CAMtC;;;AACA,MAAI,CAACC,MAAM,CAACH,oBAAD,CAAX,EAAmC;AACjCG,IAAAA,MAAM,CAACH,oBAAD,CAAN,GAA+BD,eAAe,CAACG,YAAD,CAA9C;AACD;;AACD,SAAOC,MAAM,CAACH,oBAAD,CAAb;AACD;;AAED,gBAAeI,GAAG,IAChB,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AACzC,eAAaC,eAAb,CAA6BC,UAA7B,EAAyC;AACvC;AACA;AACA,UAAMC,KAAK,GAAGR,gBAAgB,EAA9B,CAHuC,CAKvC;;AACAO,IAAAA,UAAU,CAACE,GAAX,CAAeD,KAAf,GAAuBA,KAAvB;AAEA,6BACML,GAAG,CAACG,eAAJ,GAAsB,MAAMH,GAAG,CAACG,eAAJ,CAAoBC,UAApB,CAA5B,GAA8D,EADpE;AAEEG,MAAAA,iBAAiB,EAAEF,KAAK,CAACG,QAAN;AAFrB;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA;AAAF,QAAwB,KAAKG,KAAnC;AACA,WAAO,MAAC,GAAD,eAAS,KAAKA,KAAd;AAAqB,MAAA,KAAK,EAAEb,gBAAgB,CAACU,iBAAD,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAlBwC,CAD7C","sourcesContent":["import React from 'react';\nimport initializeStore from '../store';\n\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (typeof window === 'undefined') {\n    return initializeStore(initialState);\n  }\n\n  // Create store if unavailable on the client and set it on the window object\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n  }\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default App =>\n  class AppWithRedux extends React.Component {\n    static async getInitialProps(appContext) {\n      // Get or Create the store with `undefined` as initialState\n      // This allows you to set a custom default initialState\n      const store = getOrCreateStore();\n\n      // Provide the store to getInitialProps of pages\n      appContext.ctx.store = store;\n\n      return {\n        ...(App.getInitialProps ? await App.getInitialProps(appContext) : {}),\n        initialReduxState: store.getState(),\n      };\n    }\n\n    render() {\n      const { initialReduxState } = this.props;\n      return <App {...this.props} store={getOrCreateStore(initialReduxState)} />;\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}