{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/davidnaranjo/eas/eas-frontend/pages/_app.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport App from 'next/app';\nimport { MixpanelProvider } from 'react-mixpanel';\nimport mixpanel from 'mixpanel-browser';\nimport withReduxStore from '../lib/with-redux-store';\nimport config from '../config/config';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp(props) {\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyApp).call(this, props));\n\n    if (config.googleAnalyticsEnabled) {\n      ReactGA.initialize(config.googleAnalyticsID, {\n        titleCase: false\n      });\n    }\n\n    if (config.mixpanelEnabled) {\n      mixpanel.init(config.mixpanelID, {\n        debug: config.mixpanelDebug,\n        track_pageview: false\n      });\n    }\n\n    initI18n(props.hostname);\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      return __jsx(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, config.mixpanelEnabled ? __jsx(MixpanelProvider, {\n        mixpanel: mixpanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }))) : __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withReduxStore(MyApp);","map":{"version":3,"sources":["/Users/davidnaranjo/eas/eas-frontend/pages/_app.jsx"],"names":["React","Provider","App","MixpanelProvider","mixpanel","withReduxStore","config","MyApp","props","googleAnalyticsEnabled","ReactGA","initialize","googleAnalyticsID","titleCase","mixpanelEnabled","init","mixpanelID","debug","mixpanelDebug","track_pageview","initI18n","hostname","Component","pageProps","store"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AACA,QAAIF,MAAM,CAACG,sBAAX,EAAmC;AACjCC,MAAAA,OAAO,CAACC,UAAR,CAAmBL,MAAM,CAACM,iBAA1B,EAA6C;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAA7C;AACD;;AACD,QAAIP,MAAM,CAACQ,eAAX,EAA4B;AAC1BV,MAAAA,QAAQ,CAACW,IAAT,CAAcT,MAAM,CAACU,UAArB,EAAiC;AAAEC,QAAAA,KAAK,EAAEX,MAAM,CAACY,aAAhB;AAA+BC,QAAAA,cAAc,EAAE;AAA/C,OAAjC;AACD;;AACDC,IAAAA,QAAQ,CAACZ,KAAK,CAACa,QAAP,CAAR;AARiB;AASlB;;;;6BAEQ;AAAA,wBACiC,KAAKb,KADtC;AAAA,UACCc,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,KADvB,eACuBA,KADvB;AAEP,aACE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGlB,MAAM,CAACQ,eAAP,GACC,MAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEV,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD,eAAemB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADD,GAKC,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANJ,CADF;AAWD;;;;EAzBiBrB,G;;AA4BpB,eAAeG,cAAc,CAACE,KAAD,CAA7B","sourcesContent":["import React from 'react';\nimport { Provider } from 'react-redux';\nimport App from 'next/app';\nimport { MixpanelProvider } from 'react-mixpanel';\nimport mixpanel from 'mixpanel-browser';\nimport withReduxStore from '../lib/with-redux-store';\n\nimport config from '../config/config';\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n    if (config.googleAnalyticsEnabled) {\n      ReactGA.initialize(config.googleAnalyticsID, { titleCase: false });\n    }\n    if (config.mixpanelEnabled) {\n      mixpanel.init(config.mixpanelID, { debug: config.mixpanelDebug, track_pageview: false });\n    }\n    initI18n(props.hostname);\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n      <Provider store={store}>\n        {config.mixpanelEnabled ? (\n          <MixpanelProvider mixpanel={mixpanel}>\n            <Component {...pageProps} />\n          </MixpanelProvider>\n        ) : (\n          <Component {...pageProps} />\n        )}\n      </Provider>\n    );\n  }\n}\n\nexport default withReduxStore(MyApp);\n"]},"metadata":{},"sourceType":"module"}