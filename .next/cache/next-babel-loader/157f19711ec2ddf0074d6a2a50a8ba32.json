{"ast":null,"code":"var _jsxFileName = \"/Users/davidnaranjo/eas/eas-frontend/pages/_app.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport App from 'next/app';\nimport { MixpanelProvider } from 'react-mixpanel';\nimport mixpanel from 'mixpanel-browser';\nimport { ThemeProvider, StylesProvider } from '@material-ui/core/styles';\nimport withReduxStore from '../lib/with-redux-store';\nimport theme from '../EasTheme.jsx';\nimport config from '../config/config';\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props); // if (config.googleAnalyticsEnabled) {\n    //   ReactGA.initialize(config.googleAnalyticsID, { titleCase: false });\n    // }\n\n    if (config.mixpanelEnabled) {\n      mixpanel.init(config.mixpanelID, {\n        debug: config.mixpanelDebug,\n        track_pageview: false\n      });\n    } // initI18n(props.hostname);\n\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, config.mixpanelEnabled ? __jsx(MixpanelProvider, {\n      mixpanel: mixpanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))) : __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withReduxStore(MyApp);","map":{"version":3,"sources":["/Users/davidnaranjo/eas/eas-frontend/pages/_app.jsx"],"names":["React","Provider","App","MixpanelProvider","mixpanel","ThemeProvider","StylesProvider","withReduxStore","theme","config","MyApp","constructor","props","mixpanelEnabled","init","mixpanelID","debug","mixpanelDebug","track_pageview","render","Component","pageProps","store"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,0BAA9C;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,KAAN,SAAoBR,GAApB,CAAwB;AACtBS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;AACA;AACA;;AACA,QAAIH,MAAM,CAACI,eAAX,EAA4B;AAC1BT,MAAAA,QAAQ,CAACU,IAAT,CAAcL,MAAM,CAACM,UAArB,EAAiC;AAAEC,QAAAA,KAAK,EAAEP,MAAM,CAACQ,aAAhB;AAA+BC,QAAAA,cAAc,EAAE;AAA/C,OAAjC;AACD,KAPgB,CAQjB;;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAkC,KAAKV,KAA7C;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEU,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGb,MAAM,CAACI,eAAP,GACC,MAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAET,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeiB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADD,GAKC,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANJ,CADF;AAWD;;AAzBqB;;AA4BxB,eAAed,cAAc,CAACG,KAAD,CAA7B","sourcesContent":["import React from 'react';\nimport { Provider } from 'react-redux';\nimport App from 'next/app';\nimport { MixpanelProvider } from 'react-mixpanel';\nimport mixpanel from 'mixpanel-browser';\nimport { ThemeProvider, StylesProvider } from '@material-ui/core/styles';\nimport withReduxStore from '../lib/with-redux-store';\nimport theme from '../EasTheme.jsx';\n\nimport config from '../config/config';\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n    // if (config.googleAnalyticsEnabled) {\n    //   ReactGA.initialize(config.googleAnalyticsID, { titleCase: false });\n    // }\n    if (config.mixpanelEnabled) {\n      mixpanel.init(config.mixpanelID, { debug: config.mixpanelDebug, track_pageview: false });\n    }\n    // initI18n(props.hostname);\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n      <Provider store={store}>\n        {config.mixpanelEnabled ? (\n          <MixpanelProvider mixpanel={mixpanel}>\n            <Component {...pageProps} />\n          </MixpanelProvider>\n        ) : (\n          <Component {...pageProps} />\n        )}\n      </Provider>\n    );\n  }\n}\n\nexport default withReduxStore(MyApp);\n"]},"metadata":{},"sourceType":"module"}