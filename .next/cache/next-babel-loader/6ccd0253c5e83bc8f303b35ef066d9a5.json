{"ast":null,"code":"var _jsxFileName = \"/Users/davidnaranjo/eas/eas-frontend/pages/_app.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport App from 'next/app';\nimport { MixpanelProvider } from 'react-mixpanel';\nimport mixpanel from 'mixpanel-browser';\nimport withReduxStore from '../lib/with-redux-store';\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, __jsx(MixpanelProvider, {\n      mixpanel: mixpanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withReduxStore(MyApp);","map":{"version":3,"sources":["/Users/davidnaranjo/eas/eas-frontend/pages/_app.jsx"],"names":["React","Provider","App","MixpanelProvider","mixpanel","withReduxStore","MyApp","render","Component","pageProps","store","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;;AAEA,MAAMC,KAAN,SAAoBJ,GAApB,CAAwB;AACtBK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAkC,KAAKC,KAA7C;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAEN,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF;AAOD;;AAVqB;;AAaxB,eAAeJ,cAAc,CAACC,KAAD,CAA7B","sourcesContent":["import React from 'react';\nimport { Provider } from 'react-redux';\nimport App from 'next/app';\nimport { MixpanelProvider } from 'react-mixpanel';\nimport mixpanel from 'mixpanel-browser';\n\nimport withReduxStore from '../lib/with-redux-store';\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n      <Provider store={store}>\n        <MixpanelProvider mixpanel={mixpanel}>\n          <Component {...pageProps} />\n        </MixpanelProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default withReduxStore(MyApp);\n"]},"metadata":{},"sourceType":"module"}