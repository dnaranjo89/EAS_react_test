// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MultiValueInput Should not mutate the original value when values are removed 1`] = `
<MultiValueInput
  data-component="MultiValueInput__field"
  delimiters={
    Array [
      "Enter",
      ",",
    ]
  }
  inputProps={
    Object {
      "data-component": "MultiValueInput__field-input",
    }
  }
  label="Input label"
  labelDisplayList="Selected Items"
  messageEmpty="No items selected"
  name="field1"
  onChange={[MockFunction]}
  value={
    Array [
      "Value 1",
    ]
  }
>
  <div
    data-component="MultiValueInput__field"
  >
    <TextField
      inputProps={
        Object {
          "data-component": "MultiValueInput__field-input",
        }
      }
      label="Input label"
      margin="normal"
      name="field1"
      onChange={[Function]}
      required={false}
      select={false}
      type="text"
      value=""
      variant="standard"
    >
      <WithStyles(FormControl)
        margin="normal"
        required={false}
        variant="standard"
      >
        <FormControl
          classes={
            Object {
              "fullWidth": "MuiFormControl-fullWidth-4",
              "marginDense": "MuiFormControl-marginDense-3",
              "marginNormal": "MuiFormControl-marginNormal-2",
              "root": "MuiFormControl-root-1",
            }
          }
          component="div"
          disabled={false}
          error={false}
          fullWidth={false}
          margin="normal"
          required={false}
          variant="standard"
        >
          <div
            className="MuiFormControl-root-1 MuiFormControl-marginNormal-2"
          >
            <WithStyles(WithFormControlContext(InputLabel))>
              <WithFormControlContext(InputLabel)
                classes={
                  Object {
                    "animated": "MuiInputLabel-animated-13",
                    "disabled": "MuiInputLabel-disabled-7",
                    "error": "MuiInputLabel-error-8",
                    "filled": "MuiInputLabel-filled-14",
                    "focused": "MuiInputLabel-focused-6",
                    "formControl": "MuiInputLabel-formControl-10",
                    "marginDense": "MuiInputLabel-marginDense-11",
                    "outlined": "MuiInputLabel-outlined-15",
                    "required": "MuiInputLabel-required-9",
                    "root": "MuiInputLabel-root-5",
                    "shrink": "MuiInputLabel-shrink-12",
                  }
                }
              >
                <InputLabel
                  classes={
                    Object {
                      "animated": "MuiInputLabel-animated-13",
                      "disabled": "MuiInputLabel-disabled-7",
                      "error": "MuiInputLabel-error-8",
                      "filled": "MuiInputLabel-filled-14",
                      "focused": "MuiInputLabel-focused-6",
                      "formControl": "MuiInputLabel-formControl-10",
                      "marginDense": "MuiInputLabel-marginDense-11",
                      "outlined": "MuiInputLabel-outlined-15",
                      "required": "MuiInputLabel-required-9",
                      "root": "MuiInputLabel-root-5",
                      "shrink": "MuiInputLabel-shrink-12",
                    }
                  }
                  disableAnimation={false}
                  muiFormControl={
                    Object {
                      "adornedStart": false,
                      "disabled": false,
                      "error": false,
                      "filled": false,
                      "focused": false,
                      "margin": "normal",
                      "onBlur": [Function],
                      "onEmpty": [Function],
                      "onFilled": [Function],
                      "onFocus": [Function],
                      "required": false,
                      "variant": "standard",
                    }
                  }
                >
                  <WithStyles(WithFormControlContext(FormLabel))
                    className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                    classes={
                      Object {
                        "disabled": "MuiInputLabel-disabled-7",
                        "error": "MuiInputLabel-error-8",
                        "focused": "MuiInputLabel-focused-6",
                        "required": "MuiInputLabel-required-9",
                      }
                    }
                    data-shrink={false}
                  >
                    <WithFormControlContext(FormLabel)
                      className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                      classes={
                        Object {
                          "asterisk": "MuiFormLabel-asterisk-22",
                          "disabled": "MuiFormLabel-disabled-18 MuiInputLabel-disabled-7",
                          "error": "MuiFormLabel-error-19 MuiInputLabel-error-8",
                          "filled": "MuiFormLabel-filled-20",
                          "focused": "MuiFormLabel-focused-17 MuiInputLabel-focused-6",
                          "required": "MuiFormLabel-required-21 MuiInputLabel-required-9",
                          "root": "MuiFormLabel-root-16",
                        }
                      }
                      data-shrink={false}
                    >
                      <FormLabel
                        className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                        classes={
                          Object {
                            "asterisk": "MuiFormLabel-asterisk-22",
                            "disabled": "MuiFormLabel-disabled-18 MuiInputLabel-disabled-7",
                            "error": "MuiFormLabel-error-19 MuiInputLabel-error-8",
                            "filled": "MuiFormLabel-filled-20",
                            "focused": "MuiFormLabel-focused-17 MuiInputLabel-focused-6",
                            "required": "MuiFormLabel-required-21 MuiInputLabel-required-9",
                            "root": "MuiFormLabel-root-16",
                          }
                        }
                        component="label"
                        data-shrink={false}
                        muiFormControl={
                          Object {
                            "adornedStart": false,
                            "disabled": false,
                            "error": false,
                            "filled": false,
                            "focused": false,
                            "margin": "normal",
                            "onBlur": [Function],
                            "onEmpty": [Function],
                            "onFilled": [Function],
                            "onFocus": [Function],
                            "required": false,
                            "variant": "standard",
                          }
                        }
                      >
                        <label
                          className="MuiFormLabel-root-16 MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                          data-shrink={false}
                        >
                          Input label
                        </label>
                      </FormLabel>
                    </WithFormControlContext(FormLabel)>
                  </WithStyles(WithFormControlContext(FormLabel))>
                </InputLabel>
              </WithFormControlContext(InputLabel)>
            </WithStyles(WithFormControlContext(InputLabel))>
            <WithStyles(Input)
              inputProps={
                Object {
                  "data-component": "MultiValueInput__field-input",
                }
              }
              name="field1"
              onChange={[Function]}
              type="text"
              value=""
            >
              <Input
                classes={
                  Object {
                    "disabled": "MuiInput-disabled-26",
                    "error": "MuiInput-error-28",
                    "focused": "MuiInput-focused-25",
                    "formControl": "MuiInput-formControl-24",
                    "fullWidth": "MuiInput-fullWidth-30",
                    "input": "MuiInput-input-31",
                    "inputMarginDense": "MuiInput-inputMarginDense-32",
                    "inputMultiline": "MuiInput-inputMultiline-33",
                    "inputType": "MuiInput-inputType-34",
                    "inputTypeSearch": "MuiInput-inputTypeSearch-35",
                    "multiline": "MuiInput-multiline-29",
                    "root": "MuiInput-root-23",
                    "underline": "MuiInput-underline-27",
                  }
                }
                inputProps={
                  Object {
                    "data-component": "MultiValueInput__field-input",
                  }
                }
                name="field1"
                onChange={[Function]}
                type="text"
                value=""
              >
                <WithStyles(WithFormControlContext(InputBase))
                  classes={
                    Object {
                      "disabled": "MuiInput-disabled-26",
                      "error": "MuiInput-error-28",
                      "focused": "MuiInput-focused-25",
                      "formControl": "MuiInput-formControl-24",
                      "fullWidth": "MuiInput-fullWidth-30",
                      "input": "MuiInput-input-31",
                      "inputMarginDense": "MuiInput-inputMarginDense-32",
                      "inputMultiline": "MuiInput-inputMultiline-33",
                      "inputType": "MuiInput-inputType-34",
                      "inputTypeSearch": "MuiInput-inputTypeSearch-35",
                      "multiline": "MuiInput-multiline-29",
                      "root": "MuiInput-root-23 MuiInput-underline-27",
                      "underline": null,
                    }
                  }
                  fullWidth={false}
                  inputComponent="input"
                  inputProps={
                    Object {
                      "data-component": "MultiValueInput__field-input",
                    }
                  }
                  multiline={false}
                  name="field1"
                  onChange={[Function]}
                  type="text"
                  value=""
                >
                  <WithFormControlContext(InputBase)
                    classes={
                      Object {
                        "adornedEnd": "MuiInputBase-adornedEnd-41",
                        "adornedStart": "MuiInputBase-adornedStart-40",
                        "disabled": "MuiInputBase-disabled-39 MuiInput-disabled-26",
                        "error": "MuiInputBase-error-42 MuiInput-error-28",
                        "focused": "MuiInputBase-focused-38 MuiInput-focused-25",
                        "formControl": "MuiInputBase-formControl-37 MuiInput-formControl-24",
                        "fullWidth": "MuiInputBase-fullWidth-45 MuiInput-fullWidth-30",
                        "input": "MuiInputBase-input-46 MuiInput-input-31",
                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-52",
                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-51",
                        "inputMarginDense": "MuiInputBase-inputMarginDense-47 MuiInput-inputMarginDense-32",
                        "inputMultiline": "MuiInputBase-inputMultiline-48 MuiInput-inputMultiline-33",
                        "inputType": "MuiInputBase-inputType-49 MuiInput-inputType-34",
                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-50 MuiInput-inputTypeSearch-35",
                        "marginDense": "MuiInputBase-marginDense-43",
                        "multiline": "MuiInputBase-multiline-44 MuiInput-multiline-29",
                        "root": "MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27",
                      }
                    }
                    fullWidth={false}
                    inputComponent="input"
                    inputProps={
                      Object {
                        "data-component": "MultiValueInput__field-input",
                      }
                    }
                    multiline={false}
                    name="field1"
                    onChange={[Function]}
                    type="text"
                    value=""
                  >
                    <InputBase
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd-41",
                          "adornedStart": "MuiInputBase-adornedStart-40",
                          "disabled": "MuiInputBase-disabled-39 MuiInput-disabled-26",
                          "error": "MuiInputBase-error-42 MuiInput-error-28",
                          "focused": "MuiInputBase-focused-38 MuiInput-focused-25",
                          "formControl": "MuiInputBase-formControl-37 MuiInput-formControl-24",
                          "fullWidth": "MuiInputBase-fullWidth-45 MuiInput-fullWidth-30",
                          "input": "MuiInputBase-input-46 MuiInput-input-31",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-52",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart-51",
                          "inputMarginDense": "MuiInputBase-inputMarginDense-47 MuiInput-inputMarginDense-32",
                          "inputMultiline": "MuiInputBase-inputMultiline-48 MuiInput-inputMultiline-33",
                          "inputType": "MuiInputBase-inputType-49 MuiInput-inputType-34",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch-50 MuiInput-inputTypeSearch-35",
                          "marginDense": "MuiInputBase-marginDense-43",
                          "multiline": "MuiInputBase-multiline-44 MuiInput-multiline-29",
                          "root": "MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27",
                        }
                      }
                      fullWidth={false}
                      inputComponent="input"
                      inputProps={
                        Object {
                          "data-component": "MultiValueInput__field-input",
                        }
                      }
                      muiFormControl={
                        Object {
                          "adornedStart": false,
                          "disabled": false,
                          "error": false,
                          "filled": false,
                          "focused": false,
                          "margin": "normal",
                          "onBlur": [Function],
                          "onEmpty": [Function],
                          "onFilled": [Function],
                          "onFocus": [Function],
                          "required": false,
                          "variant": "standard",
                        }
                      }
                      multiline={false}
                      name="field1"
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <div
                        className="MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27 MuiInputBase-formControl-37 MuiInput-formControl-24"
                        onClick={[Function]}
                      >
                        <input
                          aria-invalid={false}
                          className="MuiInputBase-input-46 MuiInput-input-31"
                          data-component="MultiValueInput__field-input"
                          disabled={false}
                          name="field1"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="text"
                          value=""
                        />
                      </div>
                    </InputBase>
                  </WithFormControlContext(InputBase)>
                </WithStyles(WithFormControlContext(InputBase))>
              </Input>
            </WithStyles(Input)>
          </div>
        </FormControl>
      </WithStyles(FormControl)>
    </TextField>
    <MultiValueDisplay
      allowDelete={true}
      label="Selected Items"
      messageEmpty="No items selected"
      onDelete={[Function]}
      values={
        Array [
          "Value 1",
        ]
      }
    >
      <div
        className="MultiValueDisplay"
        data-component="MultiValueDisplay"
      >
        <WithStyles(Typography)
          variant="caption"
        >
          <Typography
            align="inherit"
            classes={
              Object {
                "alignCenter": "MuiTypography-alignCenter-76",
                "alignJustify": "MuiTypography-alignJustify-78",
                "alignLeft": "MuiTypography-alignLeft-75",
                "alignRight": "MuiTypography-alignRight-77",
                "body1": "MuiTypography-body1-62",
                "body2": "MuiTypography-body2-61",
                "button": "MuiTypography-button-64",
                "caption": "MuiTypography-caption-63",
                "colorError": "MuiTypography-colorError-87",
                "colorInherit": "MuiTypography-colorInherit-82",
                "colorPrimary": "MuiTypography-colorPrimary-83",
                "colorSecondary": "MuiTypography-colorSecondary-84",
                "colorTextPrimary": "MuiTypography-colorTextPrimary-85",
                "colorTextSecondary": "MuiTypography-colorTextSecondary-86",
                "display1": "MuiTypography-display1-57",
                "display2": "MuiTypography-display2-56",
                "display3": "MuiTypography-display3-55",
                "display4": "MuiTypography-display4-54",
                "gutterBottom": "MuiTypography-gutterBottom-80",
                "h1": "MuiTypography-h1-65",
                "h2": "MuiTypography-h2-66",
                "h3": "MuiTypography-h3-67",
                "h4": "MuiTypography-h4-68",
                "h5": "MuiTypography-h5-69",
                "h6": "MuiTypography-h6-70",
                "headline": "MuiTypography-headline-58",
                "inline": "MuiTypography-inline-88",
                "noWrap": "MuiTypography-noWrap-79",
                "overline": "MuiTypography-overline-73",
                "paragraph": "MuiTypography-paragraph-81",
                "root": "MuiTypography-root-53",
                "srOnly": "MuiTypography-srOnly-74",
                "subheading": "MuiTypography-subheading-60",
                "subtitle1": "MuiTypography-subtitle1-71",
                "subtitle2": "MuiTypography-subtitle2-72",
                "title": "MuiTypography-title-59",
              }
            }
            color="default"
            gutterBottom={false}
            headlineMapping={
              Object {
                "body1": "p",
                "body2": "p",
                "display1": "h1",
                "display2": "h1",
                "display3": "h1",
                "display4": "h1",
                "h1": "h1",
                "h2": "h2",
                "h3": "h3",
                "h4": "h4",
                "h5": "h5",
                "h6": "h6",
                "headline": "h1",
                "subheading": "h3",
                "subtitle1": "h6",
                "subtitle2": "h6",
                "title": "h2",
              }
            }
            inline={false}
            noWrap={false}
            paragraph={false}
            theme={
              Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "hover": "rgba(0, 0, 0, 0.08)",
                    "hoverOpacity": 0.08,
                    "selected": "rgba(0, 0, 0, 0.14)",
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                  "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                  "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": Object {
                  "unit": 8,
                },
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "lineHeight": "1.46429em",
                  },
                  "body1Next": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "lineHeight": "1.71429em",
                  },
                  "body2Next": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.5,
                  },
                  "button": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "textTransform": "uppercase",
                  },
                  "buttonNext": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "lineHeight": "1.375em",
                  },
                  "captionNext": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "display1": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "lineHeight": "1.20588em",
                  },
                  "display2": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.8125rem",
                    "fontWeight": 400,
                    "lineHeight": "1.13333em",
                    "marginLeft": "-.02em",
                  },
                  "display3": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "-.02em",
                    "lineHeight": "1.30357em",
                    "marginLeft": "-.02em",
                  },
                  "display4": Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "7rem",
                    "fontWeight": 300,
                    "letterSpacing": "-.04em",
                    "lineHeight": "1.14286em",
                    "marginLeft": "-.04em",
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1,
                  },
                  "h2": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1,
                  },
                  "h3": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.04,
                  },
                  "h4": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.17,
                  },
                  "h5": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.33,
                  },
                  "h6": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "headline": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "lineHeight": "1.35417em",
                  },
                  "overline": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subheading": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "lineHeight": "1.5em",
                  },
                  "subtitle1": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                  "title": Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.3125rem",
                    "fontWeight": 500,
                    "lineHeight": "1.16667em",
                  },
                  "useNextVariants": false,
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "tooltip": 1500,
                },
              }
            }
            variant="caption"
          >
            <span
              className="MuiTypography-root-53 MuiTypography-caption-63"
            >
              Selected Items
            </span>
          </Typography>
        </WithStyles(Typography)>
        <div
          className="MultiValueDisplay__values-list"
        >
          <WithStyles(Chip)
            data-component="MultiValueDisplay__chip"
            key="1"
            label="Value 1"
            onDelete={[Function]}
          >
            <Chip
              classes={
                Object {
                  "avatar": "MuiChip-avatar-101",
                  "avatarChildren": "MuiChip-avatarChildren-104",
                  "avatarColorPrimary": "MuiChip-avatarColorPrimary-102",
                  "avatarColorSecondary": "MuiChip-avatarColorSecondary-103",
                  "clickable": "MuiChip-clickable-92",
                  "clickableColorPrimary": "MuiChip-clickableColorPrimary-93",
                  "clickableColorSecondary": "MuiChip-clickableColorSecondary-94",
                  "colorPrimary": "MuiChip-colorPrimary-90",
                  "colorSecondary": "MuiChip-colorSecondary-91",
                  "deletable": "MuiChip-deletable-95",
                  "deletableColorPrimary": "MuiChip-deletableColorPrimary-96",
                  "deletableColorSecondary": "MuiChip-deletableColorSecondary-97",
                  "deleteIcon": "MuiChip-deleteIcon-109",
                  "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary-110",
                  "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary-111",
                  "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary-112",
                  "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary-113",
                  "icon": "MuiChip-icon-105",
                  "iconColorPrimary": "MuiChip-iconColorPrimary-106",
                  "iconColorSecondary": "MuiChip-iconColorSecondary-107",
                  "label": "MuiChip-label-108",
                  "outlined": "MuiChip-outlined-98",
                  "outlinedPrimary": "MuiChip-outlinedPrimary-99",
                  "outlinedSecondary": "MuiChip-outlinedSecondary-100",
                  "root": "MuiChip-root-89",
                }
              }
              color="default"
              component="div"
              data-component="MultiValueDisplay__chip"
              label="Value 1"
              onDelete={[Function]}
              variant="default"
            >
              <div
                className="MuiChip-root-89 MuiChip-deletable-95"
                data-component="MultiValueDisplay__chip"
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                role="button"
                tabIndex={0}
              >
                <span
                  className="MuiChip-label-108"
                >
                  Value 1
                </span>
                <pure(Cancel)
                  className="MuiChip-deleteIcon-109"
                  onClick={[Function]}
                >
                  <Cancel
                    className="MuiChip-deleteIcon-109"
                    onClick={[Function]}
                  >
                    <WithStyles(SvgIcon)
                      className="MuiChip-deleteIcon-109"
                      onClick={[Function]}
                    >
                      <SvgIcon
                        className="MuiChip-deleteIcon-109"
                        classes={
                          Object {
                            "colorAction": "MuiSvgIcon-colorAction-117",
                            "colorDisabled": "MuiSvgIcon-colorDisabled-119",
                            "colorError": "MuiSvgIcon-colorError-118",
                            "colorPrimary": "MuiSvgIcon-colorPrimary-115",
                            "colorSecondary": "MuiSvgIcon-colorSecondary-116",
                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-120",
                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-122",
                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-121",
                            "root": "MuiSvgIcon-root-114",
                          }
                        }
                        color="inherit"
                        component="svg"
                        fontSize="default"
                        onClick={[Function]}
                        viewBox="0 0 24 24"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root-114 MuiChip-deleteIcon-109"
                          focusable="false"
                          onClick={[Function]}
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                          />
                        </svg>
                      </SvgIcon>
                    </WithStyles(SvgIcon)>
                  </Cancel>
                </pure(Cancel)>
              </div>
            </Chip>
          </WithStyles(Chip)>
        </div>
      </div>
    </MultiValueDisplay>
  </div>
</MultiValueInput>
`;

exports[`MultiValueInput Should render correctly with values 1`] = `
<div
  data-component=""
>
  <TextField
    label="Input label"
    margin="normal"
    name="field1"
    onChange={[Function]}
    required={false}
    select={false}
    type="text"
    value=""
    variant="standard"
  />
  <MultiValueDisplay
    allowDelete={true}
    label="Selected Items"
    messageEmpty="No items selected"
    onDelete={[Function]}
    values={
      Array [
        "value 1",
        "value 2",
      ]
    }
  />
</div>
`;

exports[`MultiValueInput Should render correctly without values 1`] = `
<div
  data-component=""
>
  <TextField
    label="Input label"
    margin="normal"
    name="field1"
    onChange={[Function]}
    required={false}
    select={false}
    type="text"
    value=""
    variant="standard"
  />
  <MultiValueDisplay
    allowDelete={true}
    label="Selected Items"
    messageEmpty="No items selected"
    onDelete={[Function]}
    values={Array []}
  />
</div>
`;
